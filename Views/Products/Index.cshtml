@model IEnumerable<Ecommerce.Models.Product>
@using Microsoft.AspNetCore.Http

@{
    var userRole = Context.Session.GetString("UserRole");
    var userId = Context.Session.GetInt32("UserId");

    // Product-specific messages
    var errorProductId = TempData["ErrorProductId"] != null ? (int)TempData["ErrorProductId"] : -1;
    var errorMessage = TempData["Error"]?.ToString();
    var successProductId = TempData["SuccessProductId"] != null ? (int)TempData["SuccessProductId"] : -1;
    var successMessage = TempData["Success"]?.ToString();
}

<div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
    <h2 class="fw-bold text-dark">üõí Products</h2>

    <div class="d-flex gap-2 mt-2 mt-md-0">
        @if (userRole == "Admin")
        {
            <a asp-action="Create" class="btn btn-success btn-sm shadow-sm">
                + Add Product
            </a>
        }
        else
        {
            <a asp-controller="Cart" asp-action="Index" class="btn btn-outline-dark position-relative btn-sm shadow-sm">
                Cart
                <span class="badge bg-danger ms-2">@ViewBag.CartCount</span>
            </a>
        }
    </div>
</div>

<div class="row g-4">
    @foreach (var item in Model)
    {
        <div class="col-6 col-md-4 col-lg-3">
            <div class="product-card h-100 p-3 rounded-3 shadow-sm">
                <!-- Product Image -->
                <div class="product-img-container mb-3">
                    <img src="@item.ImagePath" alt="@item.Name" class="img-fluid rounded-3">
                </div>

                <!-- Product Details -->
                <h6 class="fw-bold text-truncate">@item.Name</h6>

                <!-- Discount Logic -->
                <div class="mb-1">
                    @{
                        int discountPercent = 0;
                        decimal discountPrice = item.Price;

                        if (item.Price > 500) discountPercent = 20;
                        else if (item.Price < 200) discountPercent = 10;
                        else if (item.Price < 100) discountPercent = 5;

                        if (discountPercent > 0)
                        {
                            discountPrice = Math.Round(item.Price - (item.Price * discountPercent / 100), MidpointRounding.AwayFromZero);
                        }
                    }

                    @if (discountPercent > 0)
                    {
                        <div class="text-danger small fw-bold mb-1">üî• Special Discount!</div>
                        <span class="text-success fw-bold fs-6">‡ß≥ @((int)discountPrice)</span>
                        <span class="text-muted ms-2" style="text-decoration: line-through;">
                            ‡ß≥ @((int)item.Price)
                        </span>
                        <span class="badge bg-danger ms-2">-@discountPercent%</span>
                    }
                    else
                    {
                        <span class="fw-bold fs-6">‡ß≥ @((int)item.Price)</span>
                    }
                </div>

                <p class="small text-muted mb-1 text-truncate">@item.Description</p>

                <div class="mt-auto d-grid gap-2">
                    <!-- Product-specific messages -->
                    @if (errorProductId == item.Id && !string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-warning p-2 text-center mb-1">
                            @errorMessage
                        </div>
                    }
                    @if (successProductId == item.Id && !string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success p-2 text-center mb-1">
                            @successMessage
                        </div>
                    }

                    <!-- Add to Bag / Login (only for customers) -->
                    @if (userRole != "Admin")
                    {
                        if (userId != null)
                        {
                            if (item.Quantity > 0)
                            {
                                <form asp-controller="Products" asp-action="Buy" method="post">
                                    <input type="hidden" name="productId" value="@item.Id" />
                                    <input type="number" name="quantity" value="1" min="1" max="@item.Quantity" class="form-control form-control-sm mb-1" />
                                    <button type="submit" class="btn btn-primary btn-sm rounded-pill">
                                        üõí Add to Bag
                                    </button>
                                </form>
                            }
                            else
                            {
                                <div class="alert alert-warning p-2 text-center mb-1">
                                    ‚ùå Not Available Right Now
                                </div>
                            }
                        }
                        else
                        {
                            <a href="@Url.Action("Login", "Account")" class="btn btn-warning btn-sm rounded-pill">
                                üõí Login to Buy
                            </a>
                        }
                    }

                    <!-- Details Button (visible to all) -->
                    <a asp-controller="Products" asp-action="Details" asp-route-id="@item.Id"
                       class="btn btn-outline-secondary btn-sm rounded-pill">
                        Details
                    </a>

                    <!-- Admin Options -->
                    @if (userRole == "Admin")
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm rounded-pill">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm rounded-pill">Delete</a>
                    }
                </div>
            </div>
        </div>
    }
</div>

<style>
    .product-card {
        background: #fff;
        transition: all 0.2s ease-in-out;
        border: 1px solid #f1f1f1;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 16px rgba(0,0,0,0.12);
        }

    .product-img-container {
        height: 180px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

        .product-img-container img {
            max-height: 100%;
            max-width: 100%;
            object-fit: cover;
            transition: transform 0.3s ease-in-out;
        }

    .product-card:hover img {
        transform: scale(1.05);
    }

    .btn {
        font-weight: 500;
    }

    .text-truncate {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .badge.bg-danger {
        font-size: 0.75rem;
        border-radius: 8px;
        padding: 3px 6px;
    }
</style>

<script>
    // Auto-hide messages after 5 seconds
    document.addEventListener("DOMContentLoaded", function () {
        setTimeout(function () {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                alert.classList.remove('show');
                alert.classList.add('hide');
                alert.style.transition = "opacity 0.5s";
                alert.style.opacity = 0;
            });
        }, 5000);
    });
</script>
