@model Ecommerce.Models.Order

<h2>Order Tracking</h2>

<div class="card p-3 shadow mb-3">
    <p><strong>Tracking Number:</strong> @Model.TrackingNumber</p>
    <p><strong>Customer:</strong> @Model.CustomerName</p>
    <p><strong>Order Date:</strong> @Model.OrderDate.ToString("dd MMM yyyy, hh:mm tt")</p>
    <p><strong>Status:</strong> @Model.Status</p>
</div>

<!-- Modern Progress Tracker -->
<div class="mt-4">
    <h5>Delivery Progress</h5>
    <div class="progress-tracker mt-4">
        @{
            // Map DB status → Display Name
            var statusMap = new Dictionary<string, string>
                {
                { "Pending", "Order Placed" },
                { "Processing", "Processed" },
                { "Shipped", "Shipped" },
                { "OutForDelivery", "Out for Delivery" },
                { "Delivered", "Delivered" },
                { "Cancelled", "Cancelled" }
                };

            // Full step list including Cancelled
            var statuses = new List<string> { "Order Placed", "Processed", "Shipped", "Out for Delivery", "Delivered", "Cancelled" };

            // Determine current status label
            string displayStatus = statusMap.ContainsKey(Model.Status) ? statusMap[Model.Status] : "Order Placed";
            int currentIndex = statuses.IndexOf(displayStatus);
        }

        <div class="progress-line">
            @if (displayStatus != "Cancelled")
            {
                <div class="progress-fill" style="width:@((currentIndex) * 100 / (statuses.Count - 2))%;"></div>
            }
            else
            {
                <div class="progress-fill bg-danger" style="width:100%;"></div>
            }
        </div>

        <div class="d-flex justify-content-between">
            @for (int i = 0; i < statuses.Count; i++)
            {
                var isCancelled = (statuses[i] == "Cancelled");
                var isCompleted = (!isCancelled && i <= currentIndex && displayStatus != "Cancelled");
                var isActive = (i == currentIndex);

                <div class="progress-step text-center flex-fill">
                    <div class="circle
                                    @(isCancelled ? "cancelled" : "")
                                    @(isCompleted ? "completed" : "")
                                    @(isActive ? "active" : "")">
                        @if (isCancelled && isActive)
                        {
                            @Html.Raw("<i class='bi bi-x-lg'></i>")
                        }
                        else if (isCompleted)
                        {
                            @Html.Raw("<i class='bi bi-check-lg'></i>")
                        }
                        else
                        {
                            @(i + 1)
                        }
                    </div>
                    <small>@statuses[i]</small>
                </div>
            }
        </div>
    </div>
</div>

<h3 class="mt-4">Items</h3>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Product</th>
            <th>Description</th>
            <th>Qty</th>
            <th>Price</th>
            <th>Total</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderItems)
        {
            <tr>
                <td>@item.ProductName</td>
                <td>@item.Product?.Description</td>
                <td>@item.Quantity</td>
                <td>৳@item.Price.ToString("N0")</td>
                <td>৳@(item.Price* item.Quantity)</td>
            </tr>
        }
    </tbody>
    <tfoot class="table-light fw-bold">
        <tr>
            <td colspan="4" class="text-end">Subtotal</td>
            <td>৳@(Model.TotalAmount - Model.DeliveryCharge)</td>
        </tr>
        <tr>
            <td colspan="4" class="text-end">Delivery Charge</td>
            <td>৳@Model.DeliveryCharge.ToString("N0")</td>
        </tr>
        <tr>
            <td colspan="4" class="text-end text-success">Grand Total</td>
            <td class="text-success">৳@Model.TotalAmount.ToString("N0")</td>
        </tr>
    </tfoot>
</table>

<style>
    /* Progress Tracker Styles */
    .progress-tracker {
        position: relative;
    }

    .progress-line {
        position: absolute;
        top: 20px;
        left: 0;
        width: 100%;
        height: 4px;
        background: #e0e0e0;
        z-index: 1;
    }

    .progress-fill {
        height: 4px;
        background: #28a745; /* default green */
        transition: width 0.4s ease-in-out;
    }

    .progress-step {
        position: relative;
        z-index: 2;
    }

    .circle {
        width: 40px;
        height: 40px;
        margin: 0 auto;
        border-radius: 50%;
        background: #e0e0e0;
        color: #555;
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        transition: all 0.3s ease-in-out;
    }

        .circle.completed {
            background: #28a745; /* green */
            color: #fff;
        }

        .circle.active {
            background: #007bff; /* blue highlight */
            color: #fff;
            box-shadow: 0 0 12px rgba(0,123,255,0.6);
        }

        .circle.cancelled {
            background: #dc3545; /* red */
            color: #fff;
            box-shadow: 0 0 12px rgba(220,53,69,0.6);
        }

    .progress-step small {
        margin-top: 6px;
        display: block;
        font-size: 0.85rem;
    }
</style>
