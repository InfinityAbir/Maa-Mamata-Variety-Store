@model List<Ecommerce.Models.Order>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<div class="container my-5">
    <h2 class="text-center text-primary mb-4">🛒 My Orders</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center shadow-sm">
            You have no orders yet.
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var order in Model)
            {
                // Determine cancel button state
                string cancelTooltip = "";
                bool canCancel = false;

                if (order.Status == "Pending" || order.Status == "Processing")
                {
                    canCancel = true;
                }
                else if (order.Status == "Shipped")
                {
                    cancelTooltip = "Cannot cancel shipped order";
                }
                else if (order.Status == "Delivered")
                {
                    cancelTooltip = "Cannot cancel delivered order";
                }
                else if (order.Status == "Cancelled")
                {
                    cancelTooltip = "Order already cancelled";
                }

                // ✅ Calculate subtotal and delivery charge dynamically
                decimal subtotal = order.OrderItems.Sum(i => i.Price * i.Quantity);
                decimal deliveryCharge = order.CustomerAddress?.ToLower().Contains("dhaka") == true ? 60 : 100;
                decimal grandTotal = subtotal + deliveryCharge;

                <div class="col-lg-6 col-md-12">
                    <div class="card shadow-sm border-0 order-card">
                        <!-- Header -->
                        <div class="card-header d-flex justify-content-between align-items-center bg-primary text-white rounded-top">
                            <span class="fw-bold">Order #@order.OrderId</span>
                            <span class="badge
                                                            @(order.Status == "Pending" ? "bg-warning text-dark" :
                                                                                        order.Status == "Processing" ? "bg-info text-dark" :
                                                                                        order.Status == "Shipped" ? "bg-primary text-white" :
                                                                                        order.Status == "Delivered" ? "bg-success text-white" :
                                                                                        order.Status == "Cancelled" ? "bg-secondary text-white" :
                                                                                        "bg-secondary")">
                        @order.Status
                    </span>
                </div>

                        <!-- Body -->
                        <div class="card-body">
                            <div class="d-flex justify-content-between flex-wrap mb-2">
                                <span><strong>Subtotal:</strong> ৳@subtotal.ToString("N0")</span>
                                <span><strong>Delivery:</strong> ৳@deliveryCharge</span>
                            </div>
                            <div class="d-flex justify-content-between flex-wrap mb-2">
                                <span><strong>Grand Total:</strong> <span class="text-success fw-bold">৳@grandTotal.ToString("N0")</span></span>
                                <span><strong>Payment:</strong> @order.PaymentMethod</span>
                            </div>

                            <div class="mb-3">
                                <strong>Date & Time:</strong>
                        @{
                                    var bangladeshTime = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(order.OrderDate, "Asia/Dhaka");
                                }
                                @bangladeshTime.ToString("dd MMM yyyy, hh:mm tt")
                            </div>

                            <!-- Only show Grand Total, no individual items -->
                            <div class="row g-3 mb-3">
                                <div class="col-12 mt-2">
                                    <div class="d-flex justify-content-between align-items-center border rounded-3 p-2 shadow-sm fw-bold fs-6 text-success bg-light">
                                        <span>Grand Total (Subtotal + Delivery)</span>
                                        <span>৳@grandTotal.ToString("N0")</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Footer -->
                        <div class="card-footer text-end bg-white rounded-bottom">
                            <a href="@Url.Action("OrderConfirmation", "Order", new { id = order.OrderId })"
                               class="btn btn-sm btn-outline-primary me-2">
                                View Details
                            </a>

                            <form asp-action="Cancel" asp-controller="Order" method="post"
                                  class="d-inline"
                                  onsubmit="return confirm('Are you sure you want to cancel this order?');">
                                <input type="hidden" name="id" value="@order.OrderId" />
                                <button type="submit" class="btn btn-sm @(canCancel ? "btn-outline-danger" : "btn-secondary")"
                                        @(canCancel ? "" : "disabled")
                                        title="@cancelTooltip">
                                    Cancel
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    /* Card hover effect */
    .order-card {
        transition: transform 0.2s, box-shadow 0.2s;
        border-radius: 12px;
    }

        .order-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12);
        }

    /* Grand total card */
    .fw-bold.fs-6 {
        font-size: 0.95rem;
    }

    /* Footer buttons */
    .card-footer .btn {
        transition: all 0.2s;
    }

        .card-footer .btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 2px 6px rgba(0,0,0,0.15);
        }

    @@media (max-width: 576px) {
        .card-header, .card-footer

    {
        flex-direction: column;
        align-items: flex-start;
        gap: 5px;
    }

    }
</style>
